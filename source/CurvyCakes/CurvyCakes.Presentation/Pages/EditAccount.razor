@page "/edit-account/{Id:guid}"
@using CurvyCakes.Presentation.Data

@inject NavigationManager NavigationManager
@inject IAccountService AccountService

<MudButton Class="my-4" ButtonType="ButtonType.Button" Color="Color.Error" StartIcon="@Icons.Filled.ArrowBackIos" Href="/"></MudButton>
<MudAlert Class="@alertVisibility" Severity="Severity.Error">Account information could not be found</MudAlert>

<div style="margin-top: 1rem">
    <EditForm Model="@account" OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <MudTextField T="string" 
                      Label="Name" 
                      Required="true"
                      HelperText="Min 2 characters"
                      @bind-Value="account.Name" For="@(() => account.Name)"/>
        <MudTextField T="double" 
                      Label="Amount" 
                      Required="true"
                      @bind-Value="account.Amount"
                      Adornment="Adornment.Start" 
                      AdornmentIcon="@Icons.Material.Filled.AttachMoney" 
                      AdornmentColor="Color.Warning"/>
        <MudTextField T="string" 
                      Label="Bank" 
                      Required="true"
                      HelperText="Min 2 characters"
                      @bind-Value="account.Bank" For="@(() => account.Bank)"/>
        <MudButton Class="my-4" 
                   ButtonType="ButtonType.Submit" 
                   Variant="Variant.Filled" 
                   Color="Color.Primary">Edit Account</MudButton>
    </EditForm>
</div>

@code {
    private AccountDto account = new AccountDto();
    private string alertVisibility = "d-none";



    [Parameter]
    public Guid Id { get; set; }

    protected override void OnParametersSet()
    {
        try
        {
            this.account = this.AccountService.GetById(Id);
            ArgumentNullException.ThrowIfNull(this.account);
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
            alertVisibility = "d-block";
        }

    }

    private void OnValidSubmit()
    {
        try
        {
            this.AccountService.Update(account);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
            alertVisibility = "d-block";
        }

        StateHasChanged();
    }

}